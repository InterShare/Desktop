name: Deploy

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version number"
        default: "0.0.0"
        required: true


jobs:
  macOS:
    name: Build macOS
    runs-on: macos-latest
    environment: Build
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Setup Certificates
      uses: apple-actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
        p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
        keychain: github-actions-xamarin
        keychain-password: ""

    - name: Setup Provisioning Profiles
      uses: apple-actions/download-provisioning-profiles@v1
      with:
        bundle-id: 'com.julian-baumann.InterShareDesktop'
        profile-type: 'MAC_APP_STORE'
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

    - name: Restore
      run: |
        dotnet restore src/DesktopApp/DesktopApp.csproj
        nuget restore src/DesktopApp.XamMac/DesktopApp.XamMac.csproj

    - name: Get Previous tag
      id: latest_tag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 0.0.0

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Build
      env:
        PROJECT_NAME: "InterShare"
        MAC_APP_FILE: "InterShare.app"
        MAC_PROJECT_DIR: "./src/DesktopApp.XamMac"
        MAC_PROJECT_FILE: "DesktopApp.XamMac.csproj"
        BUILD_OUTPUT_DIRECTORY: ${{ github.workspace }}/build
        APPLE_ID: ${{ secrets.APPLE_ID }}
        APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
        BUILD_VERSION: ${{ steps.latest_tag.outputs.tag }}-${{ steps.extract_branch.outputs.branch }}
      run: |
        CLEAN_VERSION=$(echo "$BUILD_VERSION" | sed -r 's/[\/]+/-/g')
        ./.github/workflows/scripts/build-mac.sh "$CLEAN_VERSION"

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: macOS
        path: ${{ github.workspace }}/build

  linux-binary:
    name: Build Linux binary
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Restore
      run: |
        dotnet restore src/DesktopApp/DesktopApp.csproj
        dotnet restore src/DesktopApp.Gtk/DesktopApp.Gtk.csproj

    - name: Get Previous tag
      id: latest_tag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 0.0.0

    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Build
      env:
        BUILD_VERSION: ${{ steps.latest_tag.outputs.tag }}-${{ steps.extract_branch.outputs.branch }}
      run: |
        CLEAN_VERSION=$(echo "$BUILD_VERSION" | sed -r 's/[\/]+/-/g')
        dotnet publish /p:PublishSingleFile=true \
                      /p:IncludeNativeLibrariesForSelfExtract=true \
                      --self-contained true \
                      -o ${{ github.workspace }}/build \
                      -c Release \
                      /property:Version="$CLEAN_VERSION" \
                      -r linux-x64 \
                      src/DesktopApp.Gtk/DesktopApp.Gtk.csproj

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: linux-binary
        path: ${{ github.workspace }}/build/InterShare

  windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0.x'

    - name: Restore
      run: |
        dotnet restore src/DesktopApp/DesktopApp.csproj
        dotnet restore src/DesktopApp.Wpf/DesktopApp.Wpf.csproj

    - name: Get latest tag
      id: latest_tag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 0.0.0

    - name: Build
      run: |
        $Branch_Name = $Env:GITHUB_REF -replace 'refs/heads/', '';
        $Build_Version = "${{ steps.latest_tag.outputs.tag }}-$Branch_Name";
        $Clean_Version = $Build_Version -Replace '\/|\[|\]|\+','-';
        dotnet publish /p:PublishSingleFile=true `
                      /p:IncludeNativeLibrariesForSelfExtract=true `
                      /p:PublishTrimmed=true `
                      --self-contained true `
                      -o ${{ github.workspace }}/build `
                      -c Release `
                      /property:Version="$Clean_Version" `
                      -r win-x64 `
                      src/DesktopApp.Wpf/DesktopApp.Wpf.csproj

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: windows
        path: ${{ github.workspace }}/build/InterShare.exe


    - name: Test
      needs: [macOS, linux-binary, windows]
      run: echo "Test"